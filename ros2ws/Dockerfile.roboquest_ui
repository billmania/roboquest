FROM ros:humble-ros-base

LABEL version="11"
LABEL description="ROS2 RoboQuest frontend"
LABEL maintainer="Bill Mania <bill@manialabs.us>"
ARG DEBIAN_FRONTEND=noninteractive
#ENV ARCH="x64"
ENV ARCH="arm64"

# TODO: Set the timezone
# TODO: 322 seconds for complete --no-cache build on x86_64 multi-core
# TODO: 2,047 seconds for complete --no-cache build on arm64 multi-core

RUN echo "source /opt/ros/humble/setup.bash" >> /etc/profile

SHELL ["/bin/bash", "--login", "-c"]
RUN apt-get update \
    && apt-get dist-upgrade -y
RUN apt-get install -y \
    apt-utils \
    curl \
    vim
RUN apt-get install -y \
    python3-colcon-ros

WORKDIR /tmp
RUN curl --output node-v18.16.0-linux-${ARCH}.tar.gz \
      https://nodejs.org/dist/v18.16.0/node-v18.16.0-linux-${ARCH}.tar.gz \
      && curl --output SHASUM256.txt \
           https://nodejs.org/dist/v18.16.0/SHASUMS256.txt
RUN grep node-v18.16.0-linux-${ARCH}.tar.gz SHASUM256.txt \
      | sha256sum -c -
WORKDIR /usr/local
RUN tar xzf /tmp/node-v18.16.0-linux-${ARCH}.tar.gz

WORKDIR /usr/src/ros2ws/src
RUN git clone -b main https://github.com/billmania/rq_msgs.git

#
# For a PROD build
#
#WORKDIR /usr/src/ros2ws/src
#RUN git clone -b main https://github.com/billmania/roboquest_ui.git

#
# For a DEV build
#
RUN apt-get install -y \
    iproute2 \
    lsof \
    net-tools
WORKDIR /usr/src/ros2ws
COPY src/roboquest_ui src/roboquest_ui/

WORKDIR /usr/src/ros2ws
#
# The rq_msgs package must be built so the messages and services are
# available for the generate_messages.sh script.
#
RUN colcon build --packages-select rq_msgs

ENV PATH="${PATH}:/usr/local/node-v18.16.0-linux-${ARCH}/bin"
WORKDIR /usr/src/ros2ws/src/roboquest_ui
#
# Now the NodeJS modules required by roboquest_ui must be installed. This
# includes the rclnodejs-cli module with its option to generate ROS
# messages.

#
# PROD
#
#RUN npm ci --omit=dev

#
# DEV
#
RUN npm ci

WORKDIR /usr/src/ros2ws/src/roboquest_ui/public
RUN npm ci

COPY src/roboquest_ui/generate_messages.sh generate_messages.sh
RUN ./generate_messages.sh ${ARCH}

#
# And finally the roboquest_ui package can be built and installed. The
# process installs all of the necessary rclnodejs components.
#
WORKDIR /usr/src/ros2ws
RUN colcon build --packages-select roboquest_ui

WORKDIR /usr/src/ros2ws
ENTRYPOINT ["/bin/bash", "--login"]
CMD ["/usr/src/ros2ws/src/roboquest_ui/scripts/start.sh"]
